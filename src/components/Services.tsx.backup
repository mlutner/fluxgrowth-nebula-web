import React, { useEffect, useCallback, useRef } from 'react';
import { useScrollReveal } from '@/hooks/useScrollReveal';

const Services = () => {
  useScrollReveal();
  const chartRef = useRef<HTMLDivElement>(null);
  const leadGenRef = useRef<HTMLDivElement>(null);

  // Animation configuration - centralized for easy maintenance
  const ANIMATION_CONFIG = {
    duration: 1200,
    easing: 'cubic-bezier(0.25, 1, 0.5, 1)',
    stagger: {
      base: 200,
      roi: 300,
      efficiency: 400,
      leadGen: 200,
      education: 150,
    },
    opacity: {
      duration: 600,
      easing: 'ease',
    },
  };

  // Chart animation handler
  const handleChartHover = useCallback((isHovering: boolean) => {
    const svg = chartRef.current?.querySelector('svg');
    if (!svg) return;

    // Batch DOM queries for performance
    const elements = {
      foreground: svg.querySelector('.graph-foreground-group') as SVGElement,
      baseTag: svg.querySelector('.base-percent-tag') as SVGElement,
      hoverTag: svg.querySelector('.hover-percent-tag') as SVGElement,
      roiTag: svg.querySelector('.roi-tag') as SVGElement,
      efficiencyTag: svg.querySelector('.efficiency-tag') as SVGElement,
    };

    // Apply animations with proper fallbacks
    Object.entries(elements).forEach(([key, element]) => {
      if (!element) return;
      
      if (isHovering) {
        element.style.transform = 'translateY(0)';
        if (key === 'baseTag') element.style.opacity = '0';
        if (['hoverTag', 'roiTag', 'efficiencyTag'].includes(key)) {
          element.style.opacity = '1';
        }
      } else {
        element.style.transform = 'translateY(30px)';
        if (key === 'baseTag') element.style.opacity = '1';
        if (['hoverTag', 'roiTag', 'efficiencyTag'].includes(key)) {
          element.style.opacity = '0';
        }
      }
    });
  }, []);

    // Lead Generation animation handler
  const handleLeadGenHover = useCallback((isHovering: boolean) => {
    const container = leadGenRef.current;
    if (!container) return;

    const numberElement = container.querySelector('#animated-number') as HTMLElement;
    const chartCircle = container.querySelector('.chart-circle') as SVGCircleElement;
    const mainNumber = container.querySelector('.main-number') as HTMLElement;

    if (isHovering) {
      // Animate the number from 0 to 87
      if (numberElement) {
        let start = 0;
        const end = 87;
        const duration = 1800;
        const startTime = performance.now();
        
        const animateNumber = (currentTime: number) => {
          const elapsed = currentTime - startTime;
          const progress = Math.min(elapsed / duration, 1);
          const current = Math.floor(progress * end);
          numberElement.textContent = current.toLocaleString();
          
          if (progress < 1) {
            requestAnimationFrame(animateNumber);
          }
        };
        requestAnimationFrame(animateNumber);
      }

      // Animate chart circle (adjusted for new radius and stroke)
      if (chartCircle) {
        chartCircle.style.strokeDashoffset = '47'; // 188 * 0.25 for 75% fill
      }

                            // Color change for main number
                      if (mainNumber) {
                        mainNumber.style.color = 'rgb(211, 255, 202)';
                      }
    } else {
      // Reset animations
      if (numberElement) {
        numberElement.textContent = '0';
      }
      
      if (chartCircle) {
        chartCircle.style.strokeDashoffset = '188'; // Reset to full circumference
      }

      if (mainNumber) {
        mainNumber.style.color = '#ffffff';
      }
    }
  }, []);

  useEffect(() => {
    // Check for reduced motion preference
    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    if (prefersReducedMotion) {
      [chartRef, leadGenRef].forEach(ref => {
        if (ref.current) {
          ref.current.style.setProperty('--animation-duration', '0.1s');
        }
      });
    }
  }, []);

  return (
    <section id="services" className="max-w-7xl mx-auto py-12 md:py-24">
        {/* Section Heading */}
        <div className="fade-in-section text-center md:text-left">
            <h2 className="font-space-grotesk text-4xl sm:text-5xl md:text-7xl font-bold">
                Our <span className="accent-text">services</span>
            </h2>
        </div>

        {/* Services Grid */}
        <div className="mt-16 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">

            {/* Service Card 1: Workflow Automations */}
            <div className="service-card fade-in-section relative noise-bg bg-transparent border border-gray-800 rounded-2xl p-8 flex flex-col gap-6 hover:bg-[#0c0c0b] transition-colors duration-300">
                <div className="graphic-container rounded-xl workflow-automation-card">
                    <div className="workflow-steps">
                        {/* Step 1: Google Drive */}
                        <div className="workflow-step">
                            <div className="step-icon">
                                <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="rgb(211, 255, 202)"><title>Google Drive</title><path d="M19.52 14.34L14.48 5.66H9.52l-5.04 8.68L2 13.5l5.04-8.68a2 2 0 0 1 1.73-1h9.46a2 2 0 0 1 1.73 1L22 13.5l-2.48.84zM8.13 15l-1.73 1 5.6 9.5h2l5.6-9.5-1.73-1-3.87 6.5-3.87-6.5z"/></svg>
                            </div>
                            <div className="step-text">
                                <p className="app-name">Google Drive</p>
                                <p className="action-name">New file uploaded to folder</p>
                            </div>
                            <div className="step-handle">
                                <div className="dot"></div><div className="dot"></div>
                                <div className="dot"></div><div className="dot"></div>
                                <div className="dot"></div><div className="dot"></div>
                            </div>
                        </div>

                        <div className="step-connector">
                            <svg width="20" height="20" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8 1V15M8 15L12 11M8 15L4 11" stroke="rgb(211, 255, 202)" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" opacity="0.6"/></svg>
                        </div>

                        {/* Step 2: Airtable */}
                        <div className="workflow-step">
                            <div className="step-icon">
                                <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="rgb(211, 255, 202)"><title>Airtable</title><path d="M21.73 13.28l-5.5-9.4A1.67 1.67 0 0014.85 3H9.14a1.67 1.67 0 00-1.42.85L2.24 13.3a1.69 1.69 0 00.03 1.76l5.52 9.42A1.67 1.67 0 009.18 25h5.64a1.67 1.67 0 001.44-.88l5.49-9.39a1.69 1.69 0 00-.02-1.75zm-6.27-7.7L18.4 12h-4.32L12 7.71zM11.23 23l-3.05-5.2H12zm.77-6.2h-3L12 9.53zm3.77 6.2H12V13h4.98z"/></svg>
                            </div>
                            <div className="step-text">
                                <p className="app-name">Airtable</p>
                                <p className="action-name">Add data to Airtable</p>
                            </div>
                            <div className="step-handle">
                                <div className="dot"></div><div className="dot"></div>
                                <div className="dot"></div><div className="dot"></div>
                                <div className="dot"></div><div className="dot"></div>
                            </div>
                        </div>

                        <div className="step-connector">
                             <svg width="20" height="20" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8 1V15M8 15L12 11M8 15L4 11" stroke="rgb(211, 255, 202)" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" opacity="0.6"/></svg>
                        </div>

                        {/* Step 3: OpenAI */}
                        <div className="workflow-step">
                            <div className="step-icon">
                               <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="rgb(211, 255, 202)"><title>OpenAI</title><path d="M20.84 3.12c.3.18.5.43.6.72.08.24.12.5.12.78s-.04.54-.12.78a2.3 2.3 0 01-.6.72c-.17.15-.36.27-.57.36a2.1 2.1 0 01-.71.18c-.24.02-.48.02-.72 0-.25-.03-.48-.09-.7-.18a2.38 2.38 0 01-.58-.36 2.07 2.07 0 01-.6-.72c-.1-.24-.13-.5-.13-.78s.03-.54.13-.78c.09-.29.28-.54.58-.72.18-.15.37-.27.59-.36.2-.1.46-.15.7-.18.24-.03.48-.03.72 0zM12.98 9.5c.3.18.5.43.6.72.08.24.12.5.12.78s-.04.54-.12.78a2.3 2.3 0 01-.6.72c-.17.15-.36.27-.57.36-.25.1-.5.15-.71.18-.24.02-.48.02-.72 0-.25-.03-.48-.09-.7-.18a2.38 2.38 0 01-.58-.36 2.07 2.07 0 01-.6-.72c-.1-.24-.13-.5-.13-.78s.03-.54.13-.78c.09-.29.28-.54.58-.72a2.08 2.08 0 011.3-.54c.24-.03.48-.03.72 0zm-9.82 0c.3.18.5.43.6.72.08.24.12.5.12.78s-.04.54-.12.78a2.3 2.3 0 01-.6.72c-.17.15-.36.27-.57.36a2.1 2.1 0 01-.71.18c-.24.02-.48.02-.72 0-.25-.03-.48-.09-.7-.18a2.38 2.38 0 01-.58-.36 2.07 2.07 0 01-.6-.72c-.1-.24-.13-.5-.13-.78s.03-.54.13-.78c.09-.29.28-.54.58-.72a2.08 2.08 0 011.3-.54c.24-.03.48-.03.72 0zm9.82 6.38c.3.18.5.43.6.72.08.24.12.5.12.78s-.04.54-.12.78a2.3 2.3 0 01-.6.72c-.17.15-.36.27-.57.36a2.1 2.1 0 01-.71.18c-.24.02-.48.02-.72 0-.25-.03-.48-.09-.7-.18a2.38 2.38 0 01-.58-.36 2.07 2.07 0 01-.6-.72c-.1-.24-.13-.5-.13-.78s.03-.54.13-.78a2.3 2.3 0 01.6-.72c.17-.15.36-.27.57-.36.25-.1.5-.15.71-.18.24-.02.48-.02.72 0z"/></svg>
                            </div>
                            <div className="step-text">
                                <p className="app-name">OpenAI</p>
                                <p className="action-name">Write personalised message</p>
                            </div>
                            <div className="step-handle">
                                <div className="dot"></div><div className="dot"></div>
                                <div className="dot"></div><div className="dot"></div>
                                <div className="dot"></div><div className="dot"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div>
                    <h3 className="font-space-grotesk text-3xl font-bold">Workflow Automations</h3>
                    <p className="text-gray-400 mt-2">We automate your workflows by connecting your favourite applications, boosting efficiency and enhancing productivity.</p>
                </div>
            </div>

            {/* Service Card 2: Chatbot Development */}
            <div className="fade-in-section relative noise-bg bg-transparent border border-gray-800 rounded-2xl p-8 flex flex-col gap-6 hover:bg-[#0c0c0b] transition-colors duration-300" style={{transitionDelay: '0.2s'}}>
                <div className="graphic-container rounded-xl flex flex-col p-0 h-[275px] bg-[#0F0F0F] border border-gray-800 overflow-hidden relative">
                    {/* Gradient overlays for smooth scrolling appearance */}
                    <div className="absolute top-0 left-0 right-0 h-10 bg-gradient-to-b from-[#0F0F0F] to-transparent z-[2] pointer-events-none"></div>
                    <div className="absolute bottom-[44px] left-0 right-0 h-10 bg-gradient-to-t from-[#0F0F0F] to-transparent z-[2] pointer-events-none"></div>
                    
                    <div className="chat-scroll-area absolute top-6 left-6 right-6 bottom-[68px] overflow-hidden">
                        <div className="chat-messages flex flex-col gap-4 transition-transform ease-in-out hover:translate-y-[-110px]" style={{ transitionDuration: '3000ms' }}>
                            {/* User Message */}
                            <div className="flex justify-end items-start gap-3">
                                <div className="chat-bubble bg-[#1E1E1E] border border-gray-700 rounded-lg p-3 text-right max-w-[80%]">
                                    <p className="font-bold text-sm accent-text">Alex Rivera</p>
                                    <p className="text-sm text-gray-400">Analyze Q4 customer feedback for top issues.</p>
                                </div>
                                <img src="https://framerusercontent.com/images/A3tSUbMqmiRquQqdTygz1fVgaI.png" className="w-10 h-10 rounded-full border border-gray-700" alt="User Avatar" />
                            </div>
                            {/* AI Message */}
                            <div className="flex justify-start items-start gap-3">
                                <div className="w-10 h-10 rounded-lg bg-[#102b1f] border border-gray-700 flex items-center justify-center font-bold text-sm accent-text">AI</div>
                                <div className="chat-bubble bg-[#1E1E1E] border border-gray-700 rounded-lg p-3 max-w-[80%]">
                                    <p className="font-bold text-sm accent-text">AI assistant</p>
                                    <p className="text-sm text-gray-400">Of course. Analyzing now... <br /><br /> The top three issues are: <br />1. Slow delivery times (42% of comments).<br />2. Product defects upon arrival (28%).<br />3. Difficulty with the online returns process (19%).</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    {/* Chat Input Bar */}
                    <div className="input-bar absolute bottom-6 left-6 right-6 h-11 bg-[#1E1E1E] border border-gray-700 rounded-full flex items-center justify-between px-4 z-[3]">
                        <svg className="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13"></path></svg>
                        <svg className="w-5 h-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20"><path d="M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z"></path></svg>
                    </div>
                </div>
                <div>
                    <h3 className="font-space-grotesk text-3xl font-bold">Chatbot Development</h3>
                    <p className="text-gray-400 mt-2">We develop advanced chatbots that are reactive, understand nuances, and are capable of solving extremely complicated queries.</p>
                </div>
            </div>

            {/* Service Card 3: Business Consulting */}
            <div className="fade-in-section relative noise-bg bg-transparent border border-gray-800 rounded-2xl p-8 flex flex-col gap-6 hover:bg-[#0c0c0b] transition-colors duration-300" style={{transitionDelay: '0.4s'}}>
                <div 
                    ref={chartRef}
                    className="graphic-container rounded-xl h-[275px] bg-[#0F0F0F] border border-gray-800 overflow-hidden relative cursor-pointer group focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-50"
                    onMouseEnter={() => handleChartHover(true)}
                    onMouseLeave={() => handleChartHover(false)}
                    onFocus={() => handleChartHover(true)}
                    onBlur={() => handleChartHover(false)}
                    tabIndex={0}
                    role="img"
                    aria-label="Interactive business performance chart showing growth from 15% to 40% with improved ROI and efficiency metrics"
                    style={{
                        '--animation-duration': `${ANIMATION_CONFIG.duration}ms`,
                        '--animation-easing': ANIMATION_CONFIG.easing,
                    } as React.CSSProperties}>
                    <svg viewBox="0 0 355 235" fill="none" xmlns="http://www.w3.org/2000/svg" className="w-full h-full" aria-hidden="true">
                        <defs>
                            <linearGradient id="business-chart-primary-grad" x1="0" y1="0" x2="0" y2="150" gradientUnits="userSpaceOnUse">
                                <stop stopColor="rgb(211, 255, 202)" stopOpacity="0.3"/>
                                <stop offset="0.7" stopColor="rgb(211, 255, 202)" stopOpacity="0.1"/>
                                <stop offset="1" stopColor="rgb(211, 255, 202)" stopOpacity="0"/>
                            </linearGradient>
                            <linearGradient id="business-chart-secondary-grad" x1="0" y1="0" x2="0" y2="150" gradientUnits="userSpaceOnUse">
                                <stop stopColor="rgb(100, 200, 255)" stopOpacity="0.2"/>
                                <stop offset="0.7" stopColor="rgb(100, 200, 255)" stopOpacity="0.08"/>
                                <stop offset="1" stopColor="rgb(100, 200, 255)" stopOpacity="0"/>
                            </linearGradient>
                            <filter id="business-chart-glow">
                                <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
                                <feMerge> 
                                    <feMergeNode in="coloredBlur"/>
                                    <feMergeNode in="SourceGraphic"/>
                                </feMerge>
                            </filter>
                        </defs>

                        {/* Grid Lines */}
                        <g stroke="#232323" strokeWidth="0.5" opacity="0.3">
                            <line x1="0" y1="50" x2="355" y2="50"/>
                            <line x1="0" y1="100" x2="355" y2="100"/>
                            <line x1="0" y1="150" x2="355" y2="150"/>
                            <line x1="0" y1="200" x2="355" y2="200"/>
                            <line x1="71" y1="0" x2="71" y2="235"/>
                            <line x1="142" y1="0" x2="142" y2="235"/>
                            <line x1="213" y1="0" x2="213" y2="235"/>
                            <line x1="284" y1="0" x2="284" y2="235"/>
                        </g>

                        {/* Axis Labels */}
                        <g fill="#666" fontSize="10" fontFamily="Inter Tight, sans-serif">
                            <text x="10" y="55" opacity="0.7">80%</text>
                            <text x="10" y="105" opacity="0.7">60%</text>
                            <text x="10" y="155" opacity="0.7">40%</text>
                            <text x="10" y="205" opacity="0.7">20%</text>
                            <text x="60" y="230" opacity="0.7">Q1</text>
                            <text x="130" y="230" opacity="0.7">Q2</text>
                            <text x="200" y="230" opacity="0.7">Q3</text>
                            <text x="270" y="230" opacity="0.7">Q4</text>
                        </g>

                        {/* Static Background Graphs */}
                        <path d="M0 103 C 40 120, 80 40, 120 70 C 160 100, 200 150, 240 120 C 280 90, 320 140, 355 130" stroke="#232323" strokeWidth="2"/>
                        <path d="M0 103 C 40 120, 80 40, 120 70 C 160 100, 200 150, 240 120 C 280 90, 320 140, 355 130 V 235 H 0 Z" fill="rgba(255,255,255,0.02)"/>
                        
                        {/* Secondary Data Line */}
                        <path d="M0 140 C 50 120, 90 160, 140 150 C 190 130, 210 110, 260 120 C 310 130, 340 100, 355 95" stroke="#4a9eff" strokeOpacity="0.4" strokeWidth="2"/>
                        <path d="M0 140 C 50 120, 90 160, 140 150 C 190 130, 210 110, 260 120 C 310 130, 340 100, 355 95 V 235 H 0 Z" fill="url(#business-chart-secondary-grad)"/>

                        {/* Data Points */}
                        <g fill="#232323" opacity="0.6">
                            <circle cx="71" cy="103" r="3"/>
                            <circle cx="142" cy="70" r="3"/>
                            <circle cx="213" cy="120" r="3"/>
                            <circle cx="284" cy="130" r="3"/>
                        </g>

                        {/* Animated Foreground Graph */}
                        <g className="graph-foreground-group" style={{ 
                            transform: 'translateY(30px)', 
                            transition: `transform var(--animation-duration, 1200ms) var(--animation-easing, cubic-bezier(0.25, 1, 0.5, 1))`,
                            willChange: 'transform'
                        }}>
                            <path 
                                d="M0 150 C 40 120, 80 80, 118 80 C 156 80, 180 30, 220 50 C 260 70, 280 110, 355 90" 
                                stroke="rgb(211, 255, 202)" 
                                strokeWidth="3"
                                fill="none"
                            />
                            <path 
                                d="M0 150 C 40 120, 80 80, 118 80 C 156 80, 180 30, 220 50 C 260 70, 280 110, 355 90 V 235 H 0 Z" 
                                fill="url(#business-chart-primary-grad)"
                            />
                            
                            {/* Enhanced Data Points with subtle animation */}
                            <g fill="rgb(211, 255, 202)">
                                <circle cx="71" cy="120" r="4" stroke="#0F0F0F" strokeWidth="2" filter="url(#business-chart-glow)" opacity="0.9">
                                    <animate attributeName="r" values="4;5;4" dur="3s" repeatCount="indefinite"/>
                                </circle>
                                <circle cx="142" cy="80" r="4" stroke="#0F0F0F" strokeWidth="2" filter="url(#business-chart-glow)" opacity="0.9">
                                    <animate attributeName="r" values="4;5;4" dur="3s" repeatCount="indefinite" begin="0.5s"/>
                                </circle>
                                <circle cx="213" cy="50" r="4" stroke="#0F0F0F" strokeWidth="2" filter="url(#business-chart-glow)" opacity="0.9">
                                    <animate attributeName="r" values="4;5;4" dur="3s" repeatCount="indefinite" begin="1s"/>
                                </circle>
                                <circle cx="284" cy="90" r="4" stroke="#0F0F0F" strokeWidth="2" filter="url(#business-chart-glow)" opacity="0.9">
                                    <animate attributeName="r" values="4;5;4" dur="3s" repeatCount="indefinite" begin="1.5s"/>
                                </circle>
                            </g>
                        </g>

                        {/* Base Performance Tag - shows +15% initially */}
                        <g className="base-percent-tag" style={{ 
                            transform: 'translateY(30px)', 
                            transition: `transform var(--animation-duration, 1200ms) var(--animation-easing, cubic-bezier(0.25, 1, 0.5, 1)), opacity 600ms ease`,
                            transitionDelay: `${ANIMATION_CONFIG.stagger.base}ms`,
                            willChange: 'transform, opacity'
                        }}>
                            <rect x="120" y="90" width="55" height="28" rx="14" fill="#102b1f" stroke="rgba(211, 255, 202, 0.5)" strokeWidth="1"/>
                            <text x="147.5" y="109" fontFamily="Inter Tight, sans-serif" fontSize="12" fill="rgb(211, 255, 202)" textAnchor="middle">+15%</text>
                        </g>

                        {/* Hover Performance Tag - shows +40% higher up on hover */}
                        <g className="hover-percent-tag" style={{ 
                            opacity: '0',
                            transform: 'translateY(30px)', 
                            transition: `transform var(--animation-duration, 1200ms) var(--animation-easing, cubic-bezier(0.25, 1, 0.5, 1)), opacity 600ms ease`,
                            transitionDelay: `${ANIMATION_CONFIG.stagger.base}ms`,
                            willChange: 'transform, opacity'
                        }}>
                            <rect x="190" y="40" width="55" height="28" rx="14" fill="#0a4a1f" stroke="rgba(211, 255, 202, 0.8)" strokeWidth="1"/>
                            <text x="217.5" y="59" fontFamily="Inter Tight, sans-serif" fontSize="12" fill="rgb(211, 255, 202)" textAnchor="middle">+40%</text>
                        </g>

                        {/* ROI Indicator - appears above graph on hover */}
                        <g className="roi-tag" style={{ 
                            opacity: '0',
                            transform: 'translateY(30px)', 
                            transition: `transform var(--animation-duration, 1200ms) var(--animation-easing, cubic-bezier(0.25, 1, 0.5, 1)), opacity 600ms ease`,
                            transitionDelay: `${ANIMATION_CONFIG.stagger.roi}ms`,
                            willChange: 'transform, opacity'
                        }}>
                            <rect x="80" y="20" width="50" height="24" rx="12" fill="#102b1f" stroke="rgba(211, 255, 202, 0.6)" strokeWidth="1"/>
                            <text x="105" y="36" fontFamily="Inter Tight, sans-serif" fontSize="11" fill="rgb(211, 255, 202)" textAnchor="middle">ROI ↑</text>
                        </g>

                        {/* Efficiency Indicator - appears above graph on hover */}
                        <g className="efficiency-tag" style={{ 
                            opacity: '0',
                            transform: 'translateY(30px)', 
                            transition: `transform var(--animation-duration, 1200ms) var(--animation-easing, cubic-bezier(0.25, 1, 0.5, 1)), opacity 600ms ease`,
                            transitionDelay: `${ANIMATION_CONFIG.stagger.efficiency}ms`,
                            willChange: 'transform, opacity'
                        }}>
                            <rect x="280" y="15" width="70" height="26" rx="13" fill="#102b1f" stroke="rgba(211, 255, 202, 0.6)" strokeWidth="1"/>
                            <text x="315" y="32" fontFamily="Inter Tight, sans-serif" fontSize="11" fill="rgb(211, 255, 202)" textAnchor="middle">Efficiency ↗</text>
                        </g>
                    </svg>
                </div>
                <div>
                    <h3 className="font-space-grotesk text-3xl font-bold">Business Consulting</h3>
                    <p className="text-gray-400 mt-2">Using our expertise, we delve deep into your organisation and consult you on how AI-driven automations could enhance your operations.</p>
                </div>
            </div>

            {/* Service Card 4: AI Lead Generation */}
            <div className="fade-in-section relative noise-bg bg-transparent border border-gray-800 rounded-2xl p-8 flex flex-col gap-6 hover:bg-[#0c0c0b] transition-colors duration-300" style={{transitionDelay: '0.6s'}}>
                <div 
                    ref={leadGenRef}
                    className="graphic-container rounded-xl h-[275px] bg-[#0F0F0F] border border-gray-800 overflow-hidden relative cursor-pointer group focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-50"
                    onMouseEnter={() => handleLeadGenHover(true)}
                    onMouseLeave={() => handleLeadGenHover(false)}
                    onFocus={() => handleLeadGenHover(true)}
                    onBlur={() => handleLeadGenHover(false)}
                    tabIndex={0}
                    role="img"
                    aria-label="AI Lead Generation dashboard showing weekly leads and performance metrics"
                    style={{
                        position: 'relative',
                        overflow: 'hidden',
                        transform: 'translateY(0)',
                        transition: 'transform 0.4s cubic-bezier(0.2, 0.8, 0.2, 1), box-shadow 0.4s cubic-bezier(0.2, 0.8, 0.2, 1)',
                        willChange: 'transform',
                    } as React.CSSProperties}>
                    
                    {/* Noise overlay */}
                    <div 
                        className="absolute top-0 left-0 w-full h-full pointer-events-none z-[5]" 
                        style={{
                            backgroundImage: 'url(https://framerusercontent.com/images/6mcf62RlDfRfU61Yg5vb2pefpi4.png)',
                            backgroundSize: '128px',
                            opacity: 0.05
                        }}
                    />
                    
                                        {/* Enhanced Radar System */}
                    <svg 
                        viewBox="0 0 320 240" 
                        className="absolute inset-0 w-full h-full" 
                        style={{ opacity: 0.15 }}
                        aria-hidden="true"
                    >
                        {/* Radar Grid Background */}
                        <defs>
                            <radialGradient id="lead-radar-gradient" cx="50%" cy="50%" r="50%">
                                <stop offset="0%" stopColor="rgba(211, 255, 202, 0.3)"/>
                                <stop offset="70%" stopColor="rgba(211, 255, 202, 0.1)"/>
                                <stop offset="100%" stopColor="rgba(211, 255, 202, 0)"/>
                            </radialGradient>
                            <filter id="lead-radar-glow">
                                <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
                                <feMerge> 
                                    <feMergeNode in="coloredBlur"/>
                                    <feMergeNode in="SourceGraphic"/>
                                </feMerge>
                            </filter>
                        </defs>
                        
                        {/* Radar Center Point */}
                        <circle cx="160" cy="120" r="3" fill="rgb(211, 255, 202)" opacity="0.8"/>
                        
                        {/* Radar Rings */}
                        <circle className="lead-radar-ring-1" cx="160" cy="120" r="40" stroke="rgba(211, 255, 202, 0.3)" strokeWidth="1" fill="none" strokeDasharray="4,4"/>
                        <circle className="lead-radar-ring-2" cx="160" cy="120" r="70" stroke="rgba(211, 255, 202, 0.25)" strokeWidth="1" fill="none" strokeDasharray="6,6"/>
                        <circle className="lead-radar-ring-3" cx="160" cy="120" r="100" stroke="rgba(211, 255, 202, 0.2)" strokeWidth="1" fill="none" strokeDasharray="8,8"/>
                        
                        {/* Radar Sweep - Enhanced with multiple sweeps */}
                        <g className="lead-radar-sweep" style={{ transformOrigin: '160px 120px' }}>
                            <path d="M 160 120 L 160 20 A 100 100 0 0 1 230 70 Z" fill="url(#lead-radar-gradient)" opacity="0.6"/>
                            <path d="M 160 120 L 160 20 A 100 100 0 0 1 195 45 Z" fill="url(#lead-radar-gradient)" opacity="0.4"/>
                        </g>
                        
                        {/* Secondary Radar Sweep */}
                        <g className="lead-radar-sweep-secondary" style={{ transformOrigin: '160px 120px' }}>
                            <path d="M 160 120 L 160 20 A 100 100 0 0 1 180 35 Z" fill="url(#lead-radar-gradient)" opacity="0.2"/>
                        </g>
                        
                        {/* Target Detections - Animated Leads */}
                        <g className="lead-targets">
                            <circle className="lead-target lead-target-1" cx="200" cy="90" r="2" fill="rgb(211, 255, 202)" filter="url(#lead-radar-glow)"/>
                            <circle className="lead-target lead-target-2" cx="120" cy="150" r="2" fill="rgb(211, 255, 202)" filter="url(#lead-radar-glow)"/>
                            <circle className="lead-target lead-target-3" cx="180" cy="170" r="2" fill="rgb(211, 255, 202)" filter="url(#lead-radar-glow)"/>
                            <circle className="lead-target lead-target-4" cx="140" cy="80" r="2" fill="rgb(211, 255, 202)" filter="url(#lead-radar-glow)"/>
                            <circle className="lead-target lead-target-5" cx="220" cy="140" r="2" fill="rgb(211, 255, 202)" filter="url(#lead-radar-glow)"/>
                        </g>
                        
                        {/* Grid Lines (Subtle) */}
                        <g stroke="rgba(211, 255, 202, 0.1)" strokeWidth="0.5">
                            <line x1="160" y1="0" x2="160" y2="240"/>
                            <line x1="0" y1="120" x2="320" y2="120"/>
                            <line x1="47" y1="32" x2="273" y2="208"/>
                            <line x1="273" y1="32" x2="47" y2="208"/>
                        </g>
                        
                        {/* Data Flow Traces */}
                        <path className="lead-data-flow lead-flow-1" d="M 200 90 Q 180 105 160 120" stroke="rgba(211, 255, 202, 0.4)" strokeWidth="1" fill="none" strokeDasharray="3,3"/>
                        <path className="lead-data-flow lead-flow-2" d="M 120 150 Q 140 135 160 120" stroke="rgba(211, 255, 202, 0.4)" strokeWidth="1" fill="none" strokeDasharray="3,3"/>
                        <path className="lead-data-flow lead-flow-3" d="M 180 170 Q 170 145 160 120" stroke="rgba(211, 255, 202, 0.4)" strokeWidth="1" fill="none" strokeDasharray="3,3"/>
                    </svg>

                    {/* Dashboard Content */}
                    <div className="relative z-[2] p-6 h-full flex flex-col">
                        {/* Header Section */}
                        <div className="flex justify-between items-start mb-4 px-4 py-3 rounded-lg" style={{ backgroundColor: '#102b1f' }}>
                            <div className="text-xs font-medium">
                                <div style={{ fontFamily: 'Inter Tight, sans-serif', color: 'rgb(211, 255, 202)' }}>Lead Pipeline Analytics</div>
                                <div className="mt-0.5" style={{ color: 'rgba(211, 255, 202, 0.8)' }}>Live Dashboard</div>
                            </div>
                            <div className="flex items-center space-x-1">
                                <div className="w-2 h-2 rounded-full animate-pulse" style={{ backgroundColor: 'rgb(211, 255, 202)' }}></div>
                                <span className="text-xs font-medium" style={{ color: 'rgb(211, 255, 202)' }}>Live</span>
                            </div>
                        </div>

                        {/* Main Stats Grid */}
                        <div className="grid grid-cols-2 gap-6 flex-1">
                            {/* Primary Metric */}
                            <div className="flex flex-col justify-center">
                                <div className="space-y-2">
                                    <div 
                                        id="animated-number" 
                                        className="main-number text-5xl font-semibold text-white"
                                        style={{
                                            transition: 'color 0.4s ease',
                                            fontFamily: 'Inter Tight, sans-serif',
                                            fontWeight: '600',
                                            lineHeight: '1'
                                        }}
                                    >
                                        0
                                    </div>
                                    <div className="text-gray-400 text-sm font-medium">New Leads / Week</div>
                                    
                                    {/* Growth Indicator */}
                                    <div className="flex items-center space-x-2 mt-3">
                                        <div className="flex items-center text-xs" style={{ color: 'rgb(211, 255, 202)' }}>
                                            <svg className="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                                <path fillRule="evenodd" d="M3.293 9.707a1 1 0 010-1.414l6-6a1 1 0 011.414 0l6 6a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L4.707 9.707a1 1 0 01-1.414 0z" clipRule="evenodd" />
                                            </svg>
                                            <span style={{ fontFamily: 'Inter Tight, sans-serif', fontWeight: '600' }}>+23%</span>
                                        </div>
                                        <span className="text-xs text-gray-500">vs last week</span>
                                    </div>
                                </div>
                            </div>

                            {/* Secondary Metrics with Chart */}
                            <div className="flex flex-col justify-center space-y-4">
                                {/* Circular Progress Chart */}
                                <div className="relative w-20 h-20 mx-auto">
                                    <svg 
                                        viewBox="0 0 80 80" 
                                        className="w-full h-full"
                                        style={{ transform: 'rotate(-90deg)' }}
                                    >
                                        <circle 
                                            cx="40" 
                                            cy="40" 
                                            r="30" 
                                            fill="none" 
                                            stroke="#232323" 
                                            strokeWidth="8"
                                        />
                                        <circle 
                                            className="chart-circle"
                                            cx="40" 
                                            cy="40" 
                                            r="30" 
                                            fill="none" 
                                            stroke="rgb(211, 255, 202)" 
                                            strokeWidth="8" 
                                            strokeLinecap="round"
                                            style={{
                                                strokeDasharray: '188',
                                                strokeDashoffset: '188',
                                                transition: 'stroke-dashoffset 2s cubic-bezier(0.6, 0, 0.2, 1)',
                                                transitionDelay: '0.1s'
                                            }}
                                        />
                                    </svg>
                                    <div className="absolute inset-0 flex items-center justify-center">
                                        <span className="text-xs font-semibold text-white" style={{ fontFamily: 'Inter Tight, sans-serif' }}>87%</span>
                                    </div>
                                </div>
                                
                                {/* Performance Metrics - Static positioning, no vertical movement */}
                                <div className="space-y-2">
                                    <div className="flex justify-between items-center text-xs">
                                        <span className="text-gray-400" style={{ fontFamily: 'Inter Tight, sans-serif' }}>Qualified</span>
                                        <span style={{ fontWeight: '600', color: 'rgb(211, 255, 202)', fontFamily: 'Inter Tight, sans-serif' }}>82%</span>
                                    </div>
                                    <div className="flex justify-between items-center text-xs">
                                        <span className="text-gray-400" style={{ fontFamily: 'Inter Tight, sans-serif' }}>Engaged</span>
                                        <span style={{ fontWeight: '600', color: 'rgba(211, 255, 202, 0.8)', fontFamily: 'Inter Tight, sans-serif' }}>68%</span>
                                    </div>
                                    <div className="flex justify-between items-center text-xs">
                                        <span className="text-gray-400" style={{ fontFamily: 'Inter Tight, sans-serif' }}>Converted</span>
                                        <span style={{ fontWeight: '600', color: 'rgba(211, 255, 202, 0.6)', fontFamily: 'Inter Tight, sans-serif' }}>24%</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        {/* Bottom Status Bar */}
                        <div className="flex justify-between items-center text-xs text-gray-500 pt-3 mt-2">
                            <div className="flex items-center space-x-4">
                                <div className="flex items-center space-x-2">
                                    <div className="w-2 h-2 rounded-full" style={{ backgroundColor: 'rgb(211, 255, 202)' }}></div>
                                    <span style={{ fontFamily: 'Inter Tight, sans-serif' }}>Active Campaigns: 12</span>
                                </div>
                                <div className="flex items-center space-x-2">
                                    <div className="w-2 h-2 rounded-full" style={{ backgroundColor: 'rgba(211, 255, 202, 0.7)' }}></div>
                                    <span style={{ fontFamily: 'Inter Tight, sans-serif' }}>Sources: 8</span>
                                </div>
                            </div>
                            <div className="text-gray-600" style={{ fontFamily: 'Inter Tight, sans-serif' }}>
                                Updated 2min ago
                            </div>
                        </div>
                    </div>
                </div>
                <div>
                    <h3 className="font-space-grotesk text-3xl font-bold">AI Lead Generation</h3>
                    <p className="text-gray-400 mt-2 leading-relaxed">We build intelligent systems to identify, qualify, and engage potential customers, filling your pipeline with high-quality leads.</p>
                </div>
            </div>

        </div>
    </section>
  );
};

export default Services;
